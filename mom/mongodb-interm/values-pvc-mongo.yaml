# Override the name of the chart, which in turn changes the name of the containers, services etc.
nameOverride: ""
fullnameOverride: ""

# Override the deployment namespace
global:
#  namespaceOverride: ""

replicas: 3
port: 27017

## Setting this will skip the replicaset and user creation process during bootstrapping
skipInitialization: false

replicaSetName: rs0

podDisruptionBudget:
   maxUnavailable: 1
  # minAvailable: 2

updateStrategy:
   type: RollingUpdate

auth:
  enabled: true
  #existingKeySecret: ""
  #existingAdminSecret: ""
  #existingMetricsSecret: ""
  adminUser: "admin"
  adminPassword: "secret"
  mongodbUser: devops
  mongodbPass: Amadeus06
  mongodbDatabase: ccbd

  metricsUser: metrics
  metricsPassword: metrics
  key: p5QUSTor

## Optionally specify an array of imagePullSecrets.
## Secrets must be manually created in the namespace.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
##
imagePullSecrets:
   - nexus
#   - myRegistrKeySecretName

# Specs for the Docker image for the init container that establishes the replica set
installImage:
  repository: nexus.secure.ifao.net:9343/unguiculus/mongodb-install
  tag: 0.7
  pullPolicy: IfNotPresent

# Specs for the Docker image for the copyConfig init container
copyConfigImage:
  repository: nexus.secure.ifao.net:9343/busybox
  tag: 1.30.1
  pullPolicy: IfNotPresent

# Specs for the MongoDB image
image:
  repository: nexus.secure.ifao.net:9343/mongo
  tag: 4.4.1
  pullPolicy: IfNotPresent

# Additional environment variables to be set in the container
extraVars: {}
# - name: TCMALLOC_AGGRESSIVE_DECOMMIT
#   value: "true"

# Prometheus Metrics Exporter
metrics:
  enabled: true
  image:
    repository: nexus.secure.ifao.net:9343/bitnami/mongodb-exporter
    tag: 0.10.0-debian-9-r71
    pullPolicy: IfNotPresent
  port: 9216
  path: "/metrics"
  socketTimeout: 3s
  syncTimeout: 1m
  prometheusServiceDiscovery: true
  resources: 
      limits:
        cpu: 200m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 100Mi
  securityContext:
    enabled: true
    #runAsUser: 1001

# Annotations to be added to MongoDB pods
podAnnotations: {}

securityContext:
  enabled: true
  runAsUser: 1000580000
  fsGroup: 1000580000
  runAsNonRoot: true

init:
  resources: {}
  timeout: 900

  resources:
   limits:
     cpu: 3
     memory: 8Gi
   requests:
     cpu: 200m
     memory: 512Mi
  #
## Node selector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

affinity: {}

tolerations: []

# Additional containers to add to the StatefulSet
extraContainers: []
#  - name: mongo-sidecar
#    image: stefanprodan/mgob:latest
#    ports:
#    - name: sidecar-http
#      containerPort: 8090
#    volumeMounts:
#    - mountPath: /config/test1.yml
#      name: mgob-config
#      subPath: test1.yml
#    - name: mgob-storage
#      mountPath: /storage

extraLabels: {}

## Additional volumes which can be used by sidecar containers
extraVolumes: []
# - name: mgob-config
#   configMap:
#     name: mgob-config

priorityClassName: ""

persistentVolume:
  enabled: true
  ## mongodb-replicaset data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  accessModes:
    - ReadWriteOnce
  size: 50Gi
  annotations: {}

# Annotations to be added to the secrets
secretAnnotations: {}

# Annotations to be added to the service
serviceAnnotations: {}

# Annotations to be added to the statefulSet
statefulSetAnnotations: {}

terminationGracePeriodSeconds: 30

tls:
  # Enable or disable MongoDB TLS support
  enabled: true
  # Set the SSL operation mode (disabled|allowSSL|preferSSL|requireTLS)
  mode: requireTLS
  # Please generate your own TLS CA by generating it via:
  # $ openssl genrsa -out ca.key 2048
  # $ openssl req -x509 -new -nodes -key ca.key -days 10000 -out ca.crt -subj "/CN=mydomain.com"
  # After that you can base64 encode it and paste it here:
  # $ cat ca.key | base64 -w0
  cacert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM3RENDQWRTZ0F3SUJBZ0lDRUFBd0RRWUpLb1pJaHZjTkFRRUxCUUF3RWpFUU1BNEdBMVVFQXd3SFVtOXYKZEMxRFFUQWVGdzB5TURBNU1URXdPVEUxTlRsYUZ3MHpNREE1TURrd09URTFOVGxhTUU0eEN6QUpCZ05WQkFZVApBa0pITVFzd0NRWURWUVFJREFKVFJqRU5NQXNHQTFVRUNnd0VhVVpCVHpFak1DRUdBMVVFQXd3YWJXOXVaMjlrCllpMXlaWEJzYVdOaGMyVjBMbTF2Ym1kdlpHSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRFl5MmgwN2RnT0djWmpuMlQ4cDFLTEwxSjJUcjFJblZSamZ2VzJyVjduYkozcURPYXQ5TzljeGF3NApVdC9VSzhkRDF4eG9HZHhmNHAxM29ZeVFtNU95Nm1BaitoSFRmZWpibUtleHVYWmhmMUpWUmhXVXFmVmtoWndyCkRFY0RwanJhZnNTNEthS0hubWpRTi9leHd2a3NSY0ErbE9PbEVmNlZ1OW92SVlpY0tzK3RCVkdjYWp5K2E2dVkKRVhoWVc3WTdIeC9lV3F5OEdZZmxON1E1NFltYU1kalVuZkgzRlNURmZhYmFnWE9Vcy9pbUtnRTE2cUcwV21ETwpyMm0xQ3JIR0dhaEJha1hpUGtpTUh3eFp5NmZFMVFTdTN3ZStmaXNBUVg3akVZRUxwY0VkZ1J6bVBaZHRyWGJLCkFyUWJiNjVVTU5PRElPUVgzVGZFaHlYcmVKQVJBZ01CQUFHakVEQU9NQXdHQTFVZEV3UUZNQU1CQWY4d0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBSWJQQi81OWZSazRZbnZSOHdKYzlId0dMOXN6YjRPa3RvRDRwN3FaQnVFVgpiNm4vdWZYbTl6UzJBQUN5TTZJZXVxUjh5M0NDQjh6cWxVeXBiTjl1RXZnTUJPWTNXT1B6RHhoQmdEd0hRcUU5ClhBb3RRQ0p2TDY0TkN1cm11ck1ndENKWkxYNFo4VkFMTm9yM2VIOGJSaXBia0NFVUxpSjBjYmxKL1A5Q3dhVWgKM3VDRisxZ25IS1lhYlpUMHdFc0ROY2ZCVnRZNDRJRE9QVlMwclZha1JpSlFWL0tBQXh3ZGtqbmZVZDUwQ1FQNgp3VmYzSEFqa2ZkbzYzZklsYmdtSGVNbks2SytoWjZ4RWxHR0RJWWxkWnh4eGNzOTN5Ui9CVTZaclMvSjdIbjl2ClpBM21sWjNIYXlVcktqUDBVVlFFL2daazQ4NlNXQ29OVDFSWVoyTDRqRFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0ekNDQVorZ0F3SUJBZ0lKQU1BWW9Ta3lNTVFKTUEwR0NTcUdTSWIzRFFFQkN3VUFNQkl4RURBT0JnTlYKQkFNTUIxSnZiM1F0UTBFd0hoY05NakF3T1RFeE1Ea3hOVFU1V2hjTk16QXdPVEE1TURreE5UVTVXakFTTVJBdwpEZ1lEVlFRRERBZFNiMjkwTFVOQk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnZSQlBQSVoyMzVMUnA3SXlLelZWKytycWhXQXZqd3BFREdYb3VTVnlEcVlBVCtXU3BlcjdXYnlwQWU4WWJpbmMKeUYrblpGMi9paXFabjF1bUlPczhSYjZNbDZzUEUzZHlQbHh3aVhCNk53K090eVNua1pJZXZiQURnaXBNVVdadgphSUpQZHdXMmJlQW1sUmppVkxKYlY0bzlONG5CQ1BLTm8wUXdXSXYyNnJvUkd0NEVmZVFidHJ6Tit1L1U5UGpyCm1EZ2NKbEI0VmRpM3Z1ajU1MkR6UmRtVVBLSWVNazJnZ2hnUEpKaUZ0ekxtOWQrSEgvam9WR3krRzlDQWp5eGUKek9DRWRBOFpzWk53L0FWa3hqTjdVbHBrM1ZFa3BxanU3MUpJTkFDSUdHUzZFNmNVTXVhL2NKeVpPWHN1NGdFSwp3VTl2VVNZRzE2Rlk4MGIyTnpzOWR3SURBUUFCb3hBd0RqQU1CZ05WSFJNRUJUQURBUUgvTUEwR0NTcUdTSWIzCkRRRUJDd1VBQTRJQkFRQTNRbjd2dk9GaHduSWhtb0M1ZXVwNExiOEVLQnF3N2tCUHpLTG9aek5jSjJQRFgyNHcKeGRWaWlpTmxuU3VHWmRjOEFUN3ducVJzRE1EY2xYSHoxMzg3enQ0bHp4Z0dCVU5UL2JGR05vTHF6NE5Ia2xFawpscm9DeDFaSVhJenU3aHRVWXJaa3lMMWp5Q0hVRm5FaUdFb1dyYVNFTlBZTTFBNXFHTzFqTFNlR2tKTVV2UTdzCnp4MGhzR3VOa2RxQ2xaYkluNmdRaDhpWTA0SlRUWXBHWTU5S1FuU2Q2aUxja0NSSFlBS1d0WFVacXZPVnYxZDcKS2VRc0JpTkVvRXhrVGNnTE9PbDdIK0grR2NaQWdPT1VvMzJqemU4emxaUitGK3FQdENpWDc5aUpmQmNSRmpoVQpRR0pxbUJwTDJBenQ3VXVpUUhWTG81eEIyaTA0c1ArdTBvcm4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  cakey: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMk10b2RPM1lEaG5HWTU5ay9LZFNpeTlTZGs2OVNKMVVZMzcxdHExZTUyeWQ2Z3ptCnJmVHZYTVdzT0ZMZjFDdkhROWNjYUJuY1grS2RkNkdNa0p1VHN1cGdJL29SMDMzbzI1aW5zYmwyWVg5U1ZVWVYKbEtuMVpJV2NLd3hIQTZZNjJuN0V1Q21paDU1bzBEZjNzY0w1TEVYQVBwVGpwUkgrbGJ2YUx5R0luQ3JQclFWUgpuR284dm11cm1CRjRXRnUyT3g4ZjNscXN2Qm1INVRlME9lR0ptakhZMUozeDl4VWt4WDJtMm9GemxMUDRwaW9CCk5lcWh0RnBnenE5cHRRcXh4aG1vUVdwRjRqNUlqQjhNV2N1bnhOVUVydDhIdm40ckFFRis0eEdCQzZYQkhZRWMKNWoyWGJhMTJ5Z0swRzIrdVZERFRneURrRjkwM3hJY2w2M2lRRVFJREFRQUJBb0lCQVFDcUpocjVpcUtEanA4eQpHU3U5VCtWczc5c2NsM2Zmd2ZzMWk3TjFpR1J2NWNPYXFqMXlVa1o2M1hucFNzSDVWOUt3MytlZm5JeGxoUXBwCmxoVW9lYkpXUGJUdkI1bHVEK2Z1VWNWcnEwL0ovWSswOWFpQ1lWSURid20rajRnOHlQNXY5Z2FYTTdZb0VwL1kKcTlSdlk4TUVpRW4xMUExR3hQUzJ1QlRwNEx2RE5EUEN2S1VHRTJvTmtWK2hEMUlxY1NkSGIyT0hyTFA1NEpUOQo5aG1aMTRtMmh6ejIxYjlLNTR6QW1DZktxMTZyL1BQWnZJS3M0UjFQQXZtR3p1NnA4M1Y1K251d3RTVkR0OVBNCjZxUmJCdVRFM0xXV1ZPZGR4bmtMaGlXZzdxS3Z3OEUzazJ4ejJ2Nkh3c1JSVlp6YlBFMk5CbXMya2pnOWFkc2sKbWp2ci9sZnhBb0dCQVAwZVVWcENBUUtnMFNaOFV1ajBMVHRibSszZUZ6MytBNzNJTS9uOGxLbXk3Z3NPcTNVbApnOUlMNkFYdjZqRGNqVm8rWTRBYUhEVTMrSkwzcVgrVkY3Q2RLMzFwWEY0RThFT20yN05uZHZUR21CSlkvYU14CmxSeFVhSWhnRDdMajR4Zm9YdUhaUXRjN1Q3bDhtTHg3eVMzbUo1S0IxOWo0aUM0cTh1NXBnQWlMQW9HQkFOdEQKT3BZL1JpRE9zTEVYN1Y1RTJYRitUcVNKcXp4aHVtQmpVS2UwaG1saEhsR3gzY0NraW44UFV5SVdPK0FKazlEMQpldjJITmxxUlhTbXE4YWtab0xUc2tac05BWTJFUC9KSEZIb2xMaU5SREltYVgwM05TTkpoRTRIZnZRRWJ3M1BSCkpyL3Ivb3FYRGptL2p1TGE2VlJuOXR1SEh3c0JPSEpPRklDOUw4RlRBb0dCQUtOWlMzc0tHWWpPcSt0QVZHbE8KRzFxeE5pSCtMOVdyOWxJbHY1Vlc4Y0hLWFdENWFLRkRRcHp0WGlGbXdTWWpUMzJyd1o3TU91UUZhUCsvb0wxYgpSRnlRTVo3UHZmSlhFWTgzUVpXMzhjYnAydjRNUEROekxoMklRNld2Q0xLVDZ0eGs4OGFnNVVmdFdQZ0ZkclE4CjFvb3VlOTlLdURlbnZJcSs0T1FIWmI4ZEFvR0JBSXlDZ3JMeURYRE13N0paVVFZT1BRSmNITzJZUTZISVJ2V3AKNzIvcFloRjU2VUlWSjdSaVBWYTdiVnowdnA0TnhTb3RoZ21lY3BpTGV4Wk9zOXJYejRMaDcxVmJlbGxFSE82WAoybW1FRmhNUHgyY1BCSEFKVTlkdDJtQnFEdWI4OGIzd2xGSjlXM3RZM2dibjJSdExpaWRMRUlrU0NEUzNMWU1pCndrVFYrQnA5QW9HQVduSEZvVWpqcjVMK0tURHQ5eFdRMlpLZkV3Q0dzZ3JMTFFOMjhXUmJkdkVMcVhJdlg4T1cKUFlTbmFCTjRBMEpxZFFuZ2p3ZS9SZW1tcEpJODNBTFFSMWZIZHE3a0h2TEhFYlg4YjVTTDE2K25HZlJMTmpGeAo3clBvaEtXQWFNU2NQKzlVZWdNTWViR3F6WmNjbm1zVmpLTFEvam9VbmN0MklUOGdvWUJRb2lZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

# Entries for the MongoDB config file
configmap: {}

# Javascript code to execute on each replica at initContainer time
# This is the recommended way to create indexes on replicasets.
# Below is an example that creates indexes in foreground on each replica in standalone mode.
# ref: https://docs.mongodb.com/manual/tutorial/build-indexes-on-replica-sets/
# initMongodStandalone: |+
#   db = db.getSiblingDB("mydb")
#   db.my_users.createIndex({email: 1})
initMongodStandalone: ""

# Readiness probe
readinessProbe:
  initialDelaySeconds: 5
  timeoutSeconds: 1
  failureThreshold: 3
  periodSeconds: 10
  successThreshold: 1

# Liveness probe
livenessProbe:
  initialDelaySeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3
  periodSeconds: 10
  souccessThreshold: 1
