## RabbitMQ application credentials
## Ref: http://rabbitmq.com/access-control.html
##
rabbitmqUsername: devops
rabbitmqPassword: somepass

## RabbitMQ Management user used for health checks
managementUsername: management
managementPassword: manager2

## Place any additional key/value configuration to add to rabbitmq.conf
## Ref: https://www.rabbitmq.com/configure.html#config-items
extraConfig: |
#  queue_master_locator = min-masters

## Place advanced.config file in /etc/rabbitmq/advanced.config
## Ref: https://www.rabbitmq.com/configure.html#advanced-config-file
advancedConfig: |

## Definitions specification within the secret, will always be mounted
## at /etc/definitions/defintions.json
definitionsSource: definitions.json

## Place any additional plugins to enable in /etc/rabbitmq/enabled_plugins
## Ref: https://www.rabbitmq.com/plugins.html
extraPlugins: |
  rabbitmq_shovel,
  rabbitmq_shovel_management,
  rabbitmq_federation,
  rabbitmq_federation_management,

definitions:
  globalParameters: |-
#    {
#        "name": "cluster_name",
#        "value": "rabbitmq-ha"
#    }
  users: |-
#   {
#     "name": "myUsername",
#     "password": "myPassword",
#     "tags": "administrator"
#   }
  vhosts: |-
   {
     "name": "cytric_companions"
   }
  parameters: |-
#   {
#     "value": {
#       "src-uri": "amqp://localhost",
#       "src-queue": "source",
#       "dest-uri": "amqp://localhost",
#       "dest-queue": "destination",
#       "add-forward-headers": false,
#       "ack-mode": "on-confirm",
#       "delete-after": "never"
#     },
#     "vhost": "/",
#     "component": "shovel",
#     "name": "test"
#   }
  permissions: |-
   {
     "user": "devops",
     "vhost": "cytric_companions",
     "configure": ".*",
     "write": ".*",
     "read": ".*"
   }
  topicPermissions: |-
#   {
#     "user": "myUsername",
#     "vhost": "/rabbit",
#     "exchange": "myexchange",
#     "write": ".*",
#     "read": ".*"
#   }
  queues: |-
#    {
#       "name":"myName",
#       "vhost":"/rabbit",
#       "durable":true,
#       "auto_delete":false,
#       "arguments":{}
#    }
  exchanges: |-
#    {
#       "name":"myName",
#       "vhost":"/rabbit",
#       "type":"direct",
#       "durable":true,
#       "auto_delete":false,
#       "internal":false,
#       "arguments":{}
#    }
  bindings: |-
#    {
#       "source":"myName",
#       "vhost":"/rabbit",
#       "destination":"myName",
#       "destination_type":"queue",
#       "routing_key":"myKey",
#       "arguments":{}
#    }
## Sets the policies in definitions.json. This can be used to control the high
## availability of queues by mirroring them to multiple nodes.
## Ref: https://www.rabbitmq.com/ha.html
  policies: |-
    {
      "name": "ha-all",
      "pattern": ".*",
      "vhost": "cytric_companions",
      "definition": {
        "ha-mode": "all",
        "ha-sync-mode": "automatic",
        "ha-sync-batch-size": 1
      }
    }

## Ref: https://www.rabbitmq.com/rabbitmqctl.8.html#force_boot
forceBoot: false

## RabbitMQ default VirtualHost
## Ref: https://www.rabbitmq.com/vhosts.html
##
rabbitmqVhost: "/"

## Erlang cookie to determine whether different nodes are allowed to communicate with each other
## Ref: https://www.rabbitmq.com/clustering.html
##
rabbitmqErlangCookie: Xj2H2EPmsfaSwPdzTaAjRdV4efcJamS5o2JHb

## RabbitMQ Memory high watermark
## Ref: http://www.rabbitmq.com/memory.html
##
rabbitmqMemoryHighWatermark: 2GB
rabbitmqMemoryHighWatermarkType: absolute

## EPMD port for peer discovery service used by RabbitMQ nodes and CLI tools
## Ref: https://www.rabbitmq.com/clustering.html
##
rabbitmqEpmdPort: 4369

## Node port
rabbitmqNodePort: 5672

## Manager port
rabbitmqManagerPort: 15672

## Set to true to precompile parts of RabbitMQ with HiPE, a just-in-time
## compiler for Erlang. This will increase server throughput at the cost of
## increased startup time. You might see 20-50% better performance at the cost
## of a few minutes delay at startup.
rabbitmqHipeCompile: true

## SSL certificates
## Red: http://www.rabbitmq.com/ssl.html
rabbitmqCert:
  enabled: true

  # Specifies an existing secret to be used for SSL Certs
  existingSecret: ""

  ## Create a new secret using these values
  cacertfile: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN0ekNDQVorZ0F3SUJBZ0lKQU1BWW9Ta3lNTVFKTUEwR0NTcUdTSWIzRFFFQkN3VUFNQkl4RURBT0JnTlYKQkFNTUIxSnZiM1F0UTBFd0hoY05NakF3T1RFeE1Ea3hOVFU1V2hjTk16QXdPVEE1TURreE5UVTVXakFTTVJBdwpEZ1lEVlFRRERBZFNiMjkwTFVOQk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnZSQlBQSVoyMzVMUnA3SXlLelZWKytycWhXQXZqd3BFREdYb3VTVnlEcVlBVCtXU3BlcjdXYnlwQWU4WWJpbmMKeUYrblpGMi9paXFabjF1bUlPczhSYjZNbDZzUEUzZHlQbHh3aVhCNk53K090eVNua1pJZXZiQURnaXBNVVdadgphSUpQZHdXMmJlQW1sUmppVkxKYlY0bzlONG5CQ1BLTm8wUXdXSXYyNnJvUkd0NEVmZVFidHJ6Tit1L1U5UGpyCm1EZ2NKbEI0VmRpM3Z1ajU1MkR6UmRtVVBLSWVNazJnZ2hnUEpKaUZ0ekxtOWQrSEgvam9WR3krRzlDQWp5eGUKek9DRWRBOFpzWk53L0FWa3hqTjdVbHBrM1ZFa3BxanU3MUpJTkFDSUdHUzZFNmNVTXVhL2NKeVpPWHN1NGdFSwp3VTl2VVNZRzE2Rlk4MGIyTnpzOWR3SURBUUFCb3hBd0RqQU1CZ05WSFJNRUJUQURBUUgvTUEwR0NTcUdTSWIzCkRRRUJDd1VBQTRJQkFRQTNRbjd2dk9GaHduSWhtb0M1ZXVwNExiOEVLQnF3N2tCUHpLTG9aek5jSjJQRFgyNHcKeGRWaWlpTmxuU3VHWmRjOEFUN3ducVJzRE1EY2xYSHoxMzg3enQ0bHp4Z0dCVU5UL2JGR05vTHF6NE5Ia2xFawpscm9DeDFaSVhJenU3aHRVWXJaa3lMMWp5Q0hVRm5FaUdFb1dyYVNFTlBZTTFBNXFHTzFqTFNlR2tKTVV2UTdzCnp4MGhzR3VOa2RxQ2xaYkluNmdRaDhpWTA0SlRUWXBHWTU5S1FuU2Q2aUxja0NSSFlBS1d0WFVacXZPVnYxZDcKS2VRc0JpTkVvRXhrVGNnTE9PbDdIK0grR2NaQWdPT1VvMzJqemU4emxaUitGK3FQdENpWDc5aUpmQmNSRmpoVQpRR0pxbUJwTDJBenQ3VXVpUUhWTG81eEIyaTA0c1ArdTBvcm4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  certfile: Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDEgKDB4MCkKICAgICAgICBTZXJpYWwgTnVtYmVyOiA0MDk4ICgweDEwMDIpCiAgICAgICAgU2lnbmF0dXJlIEFsZ29yaXRobTogc2hhMjU2V2l0aFJTQUVuY3J5cHRpb24KICAgICAgICBJc3N1ZXI6IENOPVJvb3QtQ0EKICAgICAgICBWYWxpZGl0eQogICAgICAgICAgICBOb3QgQmVmb3JlOiBTZXAgMTEgMDk6MTU6NTkgMjAyMCBHTVQKICAgICAgICAgICAgTm90IEFmdGVyIDogU2VwICA5IDA5OjE1OjU5IDIwMzAgR01UCiAgICAgICAgU3ViamVjdDogQz1CRywgU1Q9U0YsIE89aUZBTywgQ049cmFiYml0bXEtcmFiYml0bXEtaGEucmFiYml0bXEKICAgICAgICBTdWJqZWN0IFB1YmxpYyBLZXkgSW5mbzoKICAgICAgICAgICAgUHVibGljIEtleSBBbGdvcml0aG06IHJzYUVuY3J5cHRpb24KICAgICAgICAgICAgICAgIFJTQSBQdWJsaWMtS2V5OiAoMjA0OCBiaXQpCiAgICAgICAgICAgICAgICBNb2R1bHVzOgogICAgICAgICAgICAgICAgICAgIDAwOjk2OmY2OmU4OmJkOmU5OmMzOmQ4OjE3OjE5OjlmOjI3OjdjOjllOmU0OgogICAgICAgICAgICAgICAgICAgIDg2OjU5OmVjOmNjOjE1OmI3OmY1OjIzOjZhOjQ2OjM1OmRjOjVkOmUzOjUxOgogICAgICAgICAgICAgICAgICAgIDcyOjVmOjY1OmQ4Ojc0OjMyOmRmOmYzOjU5OjVkOjI0OmE0OjNjOjg3OjZhOgogICAgICAgICAgICAgICAgICAgIDRmOjE2OmNkOmY1Ojc0OjUxOmRhOjUxOjExOjlkOmFmOjVjOmNmOmE4OjFmOgogICAgICAgICAgICAgICAgICAgIDFhOjU5OjdiOjQ3OmJjOjhlOjU0Ojg3OjNmOmVjOjgwOjZjOjg2OmVjOjVkOgogICAgICAgICAgICAgICAgICAgIDkyOjA1OjFkOjk1OmE4OjZkOjUyOjI2OmNkOmM0OjUyOjZhOjdhOmI4OjFlOgogICAgICAgICAgICAgICAgICAgIGJiOjU0OjU5OmM3OmEwOmRiOjIwOjBiOmNmOjhlOjdhOjEzOjc5OjgzOjA0OgogICAgICAgICAgICAgICAgICAgIGU0Ojc1OjZhOmI2OmNhOmI1OjA0OmI0OjQyOjk2OmQyOjFjOjAyOmU2OmE2OgogICAgICAgICAgICAgICAgICAgIGYzOjZjOmIyOjgxOjMxOmQwOjMxOmE5OjFmOjI2OmY3OmY3OmExOjUwOjJhOgogICAgICAgICAgICAgICAgICAgIDJjOjBmOmRmOmVmOjY0OjViOmY1OmE3OjcxOjM2Ojc2OmFmOmJjOjUxOmQ0OgogICAgICAgICAgICAgICAgICAgIDM1OmQ3OmQ4Ojc0OjEzOjQ3OjExOmMxOjgxOjdmOjRjOjg4OjA4OjkxOjBkOgogICAgICAgICAgICAgICAgICAgIDc4OjlkOjU4OjIxOmM3OjBlOjg4OmFkOjkwOjJlOjk5OjYzOmY5OmIzOmQxOgogICAgICAgICAgICAgICAgICAgIDI4OjU5OjkxOmM4OjdjOjcwOjdmOmU5OjhmOmQzOmJmOmVjOjk5OjkxOmZlOgogICAgICAgICAgICAgICAgICAgIDBjOjk0OjU4OjRkOjcxOmNkOjA5Ojg0OmUxOjAxOmRkOmZlOjY0OjUxOjk0OgogICAgICAgICAgICAgICAgICAgIGQwOjVkOmUzOjg3OmUwOjM3OmRlOjUzOmY0OjdmOmU5OjkwOjY3OmY4OjU1OgogICAgICAgICAgICAgICAgICAgIDU2OjIzOjEyOjdhOmQ2OjU3OmQ1OmI0OjZlOjhlOjg5OmZjOjFlOmJmOmNmOgogICAgICAgICAgICAgICAgICAgIDg0OjU5OmY3OmQ0OjZlOjBjOjZiOjViOmNhOjdiOjI5OmRiOjI3OjEyOmQ2OgogICAgICAgICAgICAgICAgICAgIDk2OjdiCiAgICAgICAgICAgICAgICBFeHBvbmVudDogNjU1MzcgKDB4MTAwMDEpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgICA4Mjo1ZTpmODpkODowMToyNDo1MDpiYzoxZjpmODpiNTphZjo1NTozMDo5MzpiZDo5NzpiYToKICAgICAgICAgMzQ6ZWQ6ZTc6ZmQ6NGQ6NGE6NmM6MWY6MmY6ZWU6NjY6NmQ6Yjg6Nzg6M2I6Zjc6NDk6MjM6CiAgICAgICAgIDQ4OmE0OmQ1OjNiOjA0OmJiOjg3OjM1OjliOmU0OjVhOjQ2OjVhOjA2OmQzOjg4OmIxOjFiOgogICAgICAgICA4ZTo1YTo4Zjo2NTpkYjo0NzpmMDo4MzpmYzpkZDo2ZjoyOTowYzo4MjpjMDpiNzo2Nzo5YzoKICAgICAgICAgZjk6NWU6MGI6ZmE6ZjE6ZTI6NmQ6ZGY6YzE6OTc6NTY6NTk6MGE6YTE6Zjg6NDA6ZTI6NTI6CiAgICAgICAgIGM4OmE5OmNiOmVhOmY4OmM2OjMwOjIzOmMyOjg2OmNiOmVhOjg2OjQxOjg0OjE4OjMyOmViOgogICAgICAgICBiMTo4NDo5NDo0NTo1ODpmOTphNzowYTo2ZDo4Nzo4ZDoyNjpkNTpjODpiODo1NDo3NTozMToKICAgICAgICAgNzE6YWI6NjU6MTY6M2U6ZmE6ZGE6MzE6Y2U6NGU6YjU6OGI6YjI6NGQ6ZGM6ZDI6Y2U6ZmQ6CiAgICAgICAgIGE5OjYyOjA0OmFlOjM0OmIyOjVlOjc5OjU4OmQ5Ojg0Ojk2OmFkOjA0OmIzOjVkOjgwOmQ3OgogICAgICAgICA4ODoyNjozNzpmNzowZTpkNjpiODo1Njo0MTowNTo1Mzo3Njo4MjpmMTo4NDo1Njo2NTplZToKICAgICAgICAgZjg6MWM6MGI6MGQ6MTE6MTE6YTI6YTk6ZjE6MDE6MmQ6ZDY6MDk6MGI6ODc6MWI6M2U6MmE6CiAgICAgICAgIGQzOmUzOmYxOmExOmMzOjg2OmZkOmIyOmI1OjcyOjczOjg1OjJmOjRlOjhhOjYzOjg0OmE1OgogICAgICAgICA2Zjo2ZDo0Yjo2Yjo1ODpiZjphZDpiMzpkZDo0ZDpiMDo5NzplODozYjpkZDphZTo0MTo1NToKICAgICAgICAgM2I6Zjg6NjM6YTM6OTU6ODU6OWU6ZWU6NTM6MTE6Y2Y6MGE6NmQ6Zjk6MGY6NmU6MjU6YTU6CiAgICAgICAgIDE4OjJjOjkwOjJhCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDMkRDQ0FjQUNBaEFDTUEwR0NTcUdTSWIzRFFFQkN3VUFNQkl4RURBT0JnTlZCQU1NQjFKdmIzUXRRMEV3CkhoY05NakF3T1RFeE1Ea3hOVFU1V2hjTk16QXdPVEE1TURreE5UVTVXakJSTVFzd0NRWURWUVFHRXdKQ1J6RUwKTUFrR0ExVUVDQXdDVTBZeERUQUxCZ05WQkFvTUJHbEdRVTh4SmpBa0JnTlZCQU1NSFhKaFltSnBkRzF4TFhKaApZbUpwZEcxeExXaGhMbkpoWW1KcGRHMXhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUFsdmJvdmVuRDJCY1pueWQ4bnVTR1dlek1GYmYxSTJwR05keGQ0MUZ5WDJYWWRETGY4MWxkSktROGgycFAKRnMzMWRGSGFVUkdkcjF6UHFCOGFXWHRIdkk1VWh6L3NnR3lHN0YyU0JSMlZxRzFTSnMzRVVtcDZ1QjY3VkZuSApvTnNnQzgrT2VoTjVnd1RrZFdxMnlyVUV0RUtXMGh3QzVxYnpiTEtCTWRBeHFSOG05L2VoVUNvc0Q5L3ZaRnYxCnAzRTJkcSs4VWRRMTE5aDBFMGNSd1lGL1RJZ0lrUTE0blZnaHh3NklyWkF1bVdQNXM5RW9XWkhJZkhCLzZZL1QKdit5WmtmNE1sRmhOY2MwSmhPRUIzZjVrVVpUUVhlT0g0RGZlVS9SLzZaQm4rRlZXSXhKNjFsZlZ0RzZPaWZ3ZQp2OCtFV2ZmVWJneHJXOHA3S2RzbkV0YVdld0lEQVFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0NYdmpZCkFTUlF2Qi80dGE5Vk1KTzlsN28wN2VmOVRVcHNIeS91Wm0yNGVEdjNTU05JcE5VN0JMdUhOWnZrV2taYUJ0T0kKc1J1T1dvOWwyMGZ3Zy96ZGJ5a01nc0MzWjV6NVhndjY4ZUp0MzhHWFZsa0tvZmhBNGxMSXFjdnErTVl3SThLRwp5K3FHUVlRWU11dXhoSlJGV1BtbkNtMkhqU2JWeUxoVWRURnhxMlVXUHZyYU1jNU90WXV5VGR6U3p2MnBZZ1N1Ck5MSmVlVmpaaEphdEJMTmRnTmVJSmpmM0R0YTRWa0VGVTNhQzhZUldaZTc0SEFzTkVSR2lxZkVCTGRZSkM0Y2IKUGlyVDQvR2h3NGI5c3JWeWM0VXZUb3BqaEtWdmJVdHJXTCt0czkxTnNKZm9POTJ1UVZVNytHT2psWVdlN2xNUgp6d3B0K1E5dUphVVlMSkFxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  keyfile: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbHZib3ZlbkQyQmNabnlkOG51U0dXZXpNRmJmMUkycEdOZHhkNDFGeVgyWFlkRExmCjgxbGRKS1E4aDJwUEZzMzFkRkhhVVJHZHIxelBxQjhhV1h0SHZJNVVoei9zZ0d5RzdGMlNCUjJWcUcxU0pzM0UKVW1wNnVCNjdWRm5Ib05zZ0M4K09laE41Z3dUa2RXcTJ5clVFdEVLVzBod0M1cWJ6YkxLQk1kQXhxUjhtOS9laApVQ29zRDkvdlpGdjFwM0UyZHErOFVkUTExOWgwRTBjUndZRi9USWdJa1ExNG5WZ2h4dzZJclpBdW1XUDVzOUVvCldaSElmSEIvNlkvVHYreVprZjRNbEZoTmNjMEpoT0VCM2Y1a1VaVFFYZU9INERmZVUvUi82WkJuK0ZWV0l4SjYKMWxmVnRHNk9pZndldjgrRVdmZlViZ3hyVzhwN0tkc25FdGFXZXdJREFRQUJBb0lCQVFDRXFBRks2UUVzZ05nRgo3OWZsZENEUEluTVAzcSt0NkRROEhpSHVuK0ptREFQUnorYlZXMENxOHhzeFQyeWlPR2VwU0VnVWx1cytic3NYCkRBWEdmYnRDNkx0RWdocWJtMEpRcjhTaGRDYlBjd2tPaWlBcTMrQm9yTENtWmFJektucVZobFRIMXhjZTE0eTkKMVFFOVRTWU9GTG1kZGZuaW52QW5JeEMrS2htSlp6b0NORFVuSE80Nk5Od09wclNLUVBPcTBIS0lzaGRWY09LSApKQ09FRnp5Vk1WRGc5VG91bHlERERIbldTUFM0Y1Q4K1FXblJxUDJFUEo0ZVVUQUNUUWNIdk1OdTQ2cU50WktzCnNXUEZGVkN0bFlQRm1mRjA0SmM0Q0lzaUtpdVlyK2NKaTVzbTVVR2k4dWVWMG4xcjQ4RHVqQUo3TmE1TU53Y0sKemI4MkUrOXhBb0dCQU1UTlIwVWRiVFh6dG5iTWZtcTRqUXNGclZqNWZGKzcrbndWajRpc0ZFRVJINGNaS0tiWgo3bE9hQk9uakFmN0FpRlE1Si8rbFdONml5Wjd2TXY2RFB0WllQalpVWGFsYjdMck96MWRSUGtNeEMzSm9LQ2t6Ckl4dEJFMlpnY0NWNktWT3JMS0JlbkNpb1VHMnpwQlV5MElZYVlRdVJ6M1M0ZzFMNng0SzF4RnVaQW9HQkFNUmYKN0w1UlZ0TWxySzUrbk56akJBWm5nQllKVHJYRmZETDJWSkVtb0cxNnEyM25SQWN1NkhOQmJESDJibThrVVNaMgpKNTl4SUR1QUZtYVlTeXkvMVNEdTlDcUl3dXZ6YW16cmxNY3dVSS8vWXg0K3QwdzA2bXl5N0p1ZGVJU0UrYlplCkRORlcyN3pNOEZOM1IrMHQ0UnpaTkl4R1FOTDZabHBYUkg3cHFXOHpBb0dBYjVVTVFhMnJqQm1BYk44SkZpMUoKR3VTL0ltRmlHVTJWZWVFbm5wQWljN25uckV1aGR1aTliZjAzcC95ajF2TUcyT29IT2JWZ0src1VjZDZoaFJpWQoraUxTTXkrbVl5M1JqU0ZSQWVyNGFGUllieWVMRGNFR3VKOHZCcTdMSnhTYWRldnB3NHVnOHBScjlhY1M4MG42ClhPNTc4M2xhckkwcE9GVWo1WUoxc0pFQ2dZQStQREJwZUpuTnZTam0vRlYyWTdRSTI1QnFhM1M0Z3VnRHRySEMKZHIxdE5PMVRuWEdmM1N2cUt4ZkJGZHFWK3FxRlIvanl2UVY4RmZJRGZjeUZXQjZSbTJsaWVZbGRBZjMrbXdMQgp4ZndpUnN3QTc5dGptWG1hRFhLVE51clZCTmVuQmxPRm5NTnpLSGdaMjdtOTMwWnl3QnU1UVNLV09xbHBoREsvCkRncVdwUUtCZ0ZrS2QwUjVNSlBsS2h0UmxaaG14UHZPSHgyUHhRL01pNmV3cnNURzZ1ajlOMWZxQ0tCZGwzaUwKeFkra3duVytNRDc4ZHl2c0RDdEFWK0E0WHNXVU1MNTgwRDlPRVhzdjd2ZFlvcXR6Mi8wVkM4NGNnenIzamFOMgpjWXNzVldUcGZDNnJyZU5TK2RESExmcWRnNHNCRllsbWgzYUcwS2l5RDBnbGc4bGUzUVJICi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

  ## Extra volumes for statefulset
extraVolumes: []

## Extra volume mounts for statefulset
extraVolumeMounts: []

## Authentication mechanism
## Ref: http://www.rabbitmq.com/authentication.html
rabbitmqAuth:
  enabled: true

  config: |
    # auth_mechanisms.1 = PLAIN
    # auth_mechanisms.2 = AMQPLAIN
    # auth_mechanisms.3 = EXTERNAL

## Automatic Partition Handling Strategy (split brain handling)
## Ref: https://www.rabbitmq.com/partitions.html#automatic-handling
## Note: pause-if-all-down is not supported without using a custom configmap since it requires extra
## configuration.

rabbitmqClusterPartitionHandling: autoheal

## Authentication backend
## Ref: https://github.com/rabbitmq/rabbitmq-auth-backend-http
rabbitmqAuthHTTP:
  enabled: true

  config: |
    # auth_backends.1 = http
    # auth_http.user_path     = http://some-server/auth/user
    # auth_http.vhost_path    = http://some-server/auth/vhost
    # auth_http.resource_path = http://some-server/auth/resource
    # auth_http.topic_path    = http://some-server/auth/topic

## LDAP Plugin
## Ref: http://www.rabbitmq.com/ldap.html
rabbitmqLDAPPlugin:
  enabled: false

  ## LDAP configuration:
  config: |
    # auth_backends.1 = ldap
    # auth_ldap.servers.1  = my-ldap-server
    # auth_ldap.user_dn_pattern = cn=${username},ou=People,dc=example,dc=com
    # auth_ldap.use_ssl    = false
    # auth_ldap.port       = 389
    # auth_ldap.log        = false

## MQTT Plugin
## Ref: http://www.rabbitmq.com/mqtt.html
rabbitmqMQTTPlugin:
  enabled: false

  ## MQTT configuration:
  config: |
    # mqtt.default_user     = guest
    # mqtt.default_pass     = guest
    # mqtt.allow_anonymous  = true

## Web MQTT Plugin
## Ref: http://www.rabbitmq.com/web-mqtt.html
rabbitmqWebMQTTPlugin:
  enabled: false

  ## Web MQTT configuration:
  config: |
    # web_mqtt.ssl.port       = 12345
    # web_mqtt.ssl.backlog    = 1024
    # web_mqtt.ssl.certfile   = /etc/cert/cacert.pem
    # web_mqtt.ssl.keyfile    = /etc/cert/cert.pem
    # web_mqtt.ssl.cacertfile = /etc/cert/key.pem
    # web_mqtt.ssl.password   = changeme

## STOMP Plugin
## Ref: http://www.rabbitmq.com/stomp.html
rabbitmqSTOMPPlugin:
  enabled: false

  ## STOMP configuration:
  config: |
    # stomp.default_user = guest
    # stomp.default_pass = guest

## Web STOMP Plugin
## Ref: http://www.rabbitmq.com/web-stomp.html
rabbitmqWebSTOMPPlugin:
  enabled: false

  ## Web STOMP configuration:
  config: |
    # web_stomp.ws_frame = binary
    # web_stomp.cowboy_opts.max_keepalive = 10

## Prometheus Plugin
## Ref: https://www.rabbitmq.com/prometheus.html
rabbitmqPrometheusPlugin:
  enabled: true

  ## NodePort
  nodePort: null

  ## metrics port, overrides configuration:
  ## prometheus.tcp.port
  port: 15692

  ## metrics path, overrides configuration:
  ## prometheus.path
  path: /metrics

  ## Prometheus configuration:
  ## https://github.com/rabbitmq/rabbitmq-prometheus
  config: |
   ## prometheus.path and prometheus.tcp.port can be set above

## AMQPS support
## Ref: http://www.rabbitmq.com/ssl.html
rabbitmqAmqpsSupport:
  enabled: true

  # NodePort
  amqpsNodePort: 5671

  # SSL configuration
  config: |
       listeners.ssl.default             = 5671
       ssl_options.cacertfile            = /etc/cert/cacert.pem
       ssl_options.certfile              = /etc/cert/cert.pem
       ssl_options.keyfile               = /etc/cert/key.pem
       ssl_options.verify                = verify_none
       ssl_options.fail_if_no_peer_cert  = false
  #
## Number of replicas
replicaCount: 3

image:
  repository: rabbitmq
  tag: 3.8.9-alpine
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  pullSecrets:
    - nexus
busyboxImage:
  repository: nexus.secure.ifao.net:9343/busybox
  tag: 1.30.1
  pullPolicy: IfNotPresent

## Duration in seconds the pod needs to terminate gracefully
terminationGracePeriodSeconds: 10

service:
  annotations: {}
  clusterIP: None

  ## List of IP addresses at which the service is available
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  ##
  externalIPs: []

  loadBalancerIP: ""
  externalTrafficPolicy: ""
  loadBalancerSourceRanges: []
  type: ClusterIP

  ## Customize nodePort number when the service type is NodePort
  ### Ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  ###
  epmdNodePort: 32562
  amqpNodePort: 32560
  managerNodePort: 30129

podManagementPolicy: OrderedReady

## Statefulsets rolling update update strategy
## Ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#rolling-update
##
updateStrategy: OnDelete

## Statefulsets Pod Priority
## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
## priorityClassName: ""

## We usually recommend not to specify default resources and to leave this as
## a conscious choice for the user. This also increases chances charts run on
## environments with little resources, such as Minikube. If you do want to
## specify resources, uncomment the following lines, adjust them as necessary,
## and remove the curly braces after 'resources:'.
## If you decide to set the memory limit, make sure to also change the
## rabbitmqMemoryHighWatermark following the formula:
##   rabbitmqMemoryHighWatermark = 0.4 * resources.limits.memory
##
resources:
   limits:
     cpu: 2
     memory: 4Gi
   requests:
     cpu: 200m
     memory: 2Gi
initContainer:
  resources:
  #   limits:
  #     cpu: 100m
  #     memory: 128Mi
     requests:
       cpu: 200m
       memory: 256Mi

## Additional init containers
extraInitContainers: []

## Additional containers
extraContainers: []

## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName:

## Data Persistency
persistentVolume:
  enabled: true
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  ## selector can be used to match an existing PersistentVolume
  selector: {}
  name: data
  accessModes:
    - ReadWriteOnce
  size: 20Gi
  annotations: {}
  labels: {}

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
##
nodeSelector: {}

## Node tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
##
tolerations: []

## Extra Annotations to be added to pod
podAnnotations: {}

## Extra Annotations to be added to the StatefulSet
statefulSetAnnotations: {}

## Pod affinity
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
podAntiAffinity: soft
podAntiAffinityTopologyKey: "kubernetes.io/hostname"

## Affinity settings
## Defining 'affinity' will disable any podAntiAffinity settings.
## If you still need anti-affinity, you must include the configuration here.
##
affinity: {}

## Create default configMap
##
existingConfigMap: false

## Add additional labels to all resources
##
extraLabels: {}

## Role Based Access
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
##
rbac:
  create: true

## Service Account
## Ref: https://kubernetes.io/docs/admin/service-accounts-admin/
##
serviceAccount:
  create: true

  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the fullname template
  # name:

  ## Automount API credentials for a service account.
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server
  automountServiceAccountToken: true

ingress:
  ## Set to true to enable ingress record generation
  enabled: false

  path: /

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  ## hostName: foo.bar.com

  ## Set this to true in order to enable TLS on the ingress record
  tls: false

  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret: myTlsSecret

  ## Ingress annotations done as key:value pairs
  annotations: {}
  #  kubernetes.io/ingress.class: nginx

livenessProbe:
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  exec:
    command:
      - /bin/bash
      - -ec
      - rabbitmq-diagnostics -q check_running

readinessProbe:
  initialDelaySeconds: 20
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 6
  exec:
    command:
      - /bin/bash
      - -ec
      - rabbitmq-diagnostics -q check_running

# Specifies an existing secret to be used for RMQ password, management user password and Erlang Cookie
existingSecret: ""


## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  fsGroup: 1000590000
  runAsGroup: 1000590000
  runAsNonRoot: true
  runAsUser: 1000590000

## Sets environment variables for the rabbitmq container
env: {}

prometheus:
  ## Configures Prometheus Exporter to expose and scrape stats.
  exporter:
    enabled: true
    env: {}
    image:
      repository: kbudde/rabbitmq-exporter
      tag: v1.0.0-RC7.1
      pullPolicy: IfNotPresent

    ## Port Prometheus scrapes for metrics
    port: 9090
    ## Comma-separated list of extended scraping capabilities supported by the target RabbitMQ server
    capabilities: "bert,no_sort"

    ## Allow overriding of container resources
    resources:
      limits:
        cpu: 200m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 100Mi

  ## Prometheus is using Operator.  Setting to true will create Operator specific resources like ServiceMonitors and Alerts
  operator:
    ## Are you using Prometheus Operator? [Blog Post](https://coreos.com/blog/the-prometheus-operator.html)
    enabled: false

    ## Configures Alerts, which will be setup via Prometheus Operator / ConfigMaps.
    alerts:
      ## Prometheus exporter must be enabled as well
      enabled: false

      ## Selector must be configured to match Prometheus Install, defaulting to whats done by Prometheus Operator
      ## See [CoreOS Prometheus Chart](https://github.com/coreos/prometheus-operator/tree/master/helm)
      selector:
        role: alert-rules
      labels: {}

    serviceMonitor:
      ## Interval at which Prometheus scrapes RabbitMQ Exporter
      interval: 10s

      # Namespace Prometheus is installed in
      namespace: monitoring

      ## Defaults to whats used if you follow CoreOS [Prometheus Install Instructions](https://github.com/coreos/prometheus-operator/tree/master/helm#tldr)
      ## [Prometheus Selector Label](https://github.com/coreos/prometheus-operator/blob/master/helm/prometheus/templates/prometheus.yaml#L65)
      ## [Kube Prometheus Selector Label](https://github.com/coreos/prometheus-operator/blob/master/helm/kube-prometheus/values.yaml#L298)
      selector:
        prometheus: kube-prometheus

## Kubernetes Cluster Domain
clusterDomain: cluster.local

## Pod Disruption Budget
podDisruptionBudget:
   maxUnavailable: 1
   #minAvailable: 1

lifecycle: {}
